(def *capture* @{})
(setdyn :rules @{})
(defn- append-capture [name & arg]
(update *capture* name (fn [val] (array/push (or val @[]) arg))))
(defmacro install-rule [& args] nil)
(defmacro list-pkgs [& args] nil)
(defmacro declare-executable [& args]
    (append-capture 'declare-executable args)
    nil)
(var default-archiver nil)
(var default-ldflags nil)
(defmacro list-rules [& args] nil)
(defmacro show-help [& args] nil)
(defmacro copy [& args] nil)
(var default-cflags nil)
(var threads? nil)
(var macro-lints nil)
(defmacro filepath-replace [& args] nil)
(defmacro declare-bin [& args]
    (append-capture 'declare-bin args)
    nil)
(var janet-ldflags nil)
(var default-compiler nil)
(defmacro find-manifest-dir [& args] nil)
(var default-linker nil)
(var janet-lflags nil)
(var is-mac nil)
(defmacro jpm-debug-repl [& args] nil)
(var default-cpp-compiler nil)
(defmacro rm [& args] nil)
(defmacro test [& args] nil)
(defmacro sh-rule [& args] nil)
(defmacro post-deps [& args] nil)
(defmacro declare-native [& args]
    (append-capture 'declare-native args)
    nil)
(var default-cpp-linker nil)
(defmacro clear-cache [& args] nil)
(var JANET_HEADERPATH nil)
(defmacro declare-binscript [& args]
    (append-capture 'declare-binscript args)
    nil)
(var statext nil)
(defmacro import-rules [& args] nil)
(defmacro declare-project [& args]
    (append-capture 'declare-project args)
    nil)
(defmacro sh-phony [& args] nil)
(var JANET_BINPATH nil)
(defmacro do-rule [& args] nil)
(defmacro shell [& args] nil)
(var project nil)
(defmacro entry-replace [& args] nil)
(var JANET_MODPATH nil)
(var default-cppflags nil)
(defmacro clean [& args] nil)
(var sep nil)
(defmacro show-paths [& args] nil)
(defmacro install [& args] nil)
(defmacro update-pkgs [& args] nil)
(var objext nil)
(var janet-cflags nil)
(defmacro add-dep [& args] nil)
(var modext nil)
(defmacro require-jpm [& args] nil)
(defmacro create-dirs [& args] nil)
(defmacro rule [& args] nil)
(defmacro declare-archive [& args]
    (append-capture 'declare-archive args)
    nil)
(defmacro find-cache [& args] nil)
(defmacro show-rule-tree [& args] nil)
(defmacro make-jpm-env [& args] nil)
(defmacro list-installed [& args] nil)
(defmacro install-git [& args] nil)
(defmacro clear-manifest [& args] nil)
(var default-lflags nil)
(defmacro phony [& args] nil)
(defmacro declare-source [& args]
    (append-capture 'declare-source args)
    nil)
(defmacro build [& args] nil)
(defmacro quickbin [& args] nil)
(defmacro declare-headers [& args]
    (append-capture 'declare-headers args)
    nil)
(var absprefix nil)
(defmacro add-body [& args] nil)
(defmacro find-manifest [& args] nil)
(defmacro deps [& args] nil)
(defmacro check-cc [& args] nil)
(var JANET_LIBPATH nil)
(defmacro mkdir [& args] nil)
(var is-win nil)
(defmacro uninstall [& args] nil)
(defmacro install-file-rule [& args] nil)
(defmacro declare-manpage [& args] nil)

#(defmacro defn- [& args] nil)
#(defmacro defn [& args] nil)
#(defmacro def- [& args] nil)
#(defmacro def [& args] nil)
